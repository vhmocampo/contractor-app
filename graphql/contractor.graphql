
extend type Query {
    contractor(
      id: ID @eq
    ): Contractor @find

    contractors(
      first_name: String @where(operator: "like", ignoreNull: true)
      last_name: String @where(operator: "like", ignoreNull: true)
      phone: String @where(operator: "like", ignoreNull: true)
      email: String @where(operator: "like", ignoreNull: true)
    ): [Contractor!]! @paginate(defaultCount: 10)

    searchContractors(
      skill: [String!]
    ): SearchContractorsResult
}

extend type Mutation {
  upsertContractor (
    id: ID
    first_name: String!
    last_name: String!
    phone: String!
    email: String!
    yoe: Int
  ): Contractor! @upsert
}

type SearchContractorsResult {
  count: Int!
  contractors: [Contractor!]
}

type Contractor {
    id: ID!
    first_name: String!
    last_name: String!
    email: String!
    phone: String
    yoe: Int!
    skills: [Skill!]! @belongsToMany
    created_at: DateTime!
    updated_at: DateTime!
}

type Skill {
    id: ID!
    name: String!
}